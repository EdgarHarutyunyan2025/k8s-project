---
# Source: App-HelmChart/templates/secret-db.yaml
apiVersion: v1
kind: Secret
metadata:
  name: db-secret
type: Opaque
stringData:
  POSTGRES_PASSWORD: root
---
# Source: App-HelmChart/templates/config_back.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: back-env
data:
    DB_HOST         : db
    DB_PORT         : "5432"
    DB_USERNAME     : postgres
    DB_DATABASE     : devops_lessons
    PORT            : "7000"
    HOST            : "0.0.0.0"
    NODE_ENV        : development
    APP_NAME        : Lessons
    APP_DESCRIPTION : Devops lessons REST API
---
# Source: App-HelmChart/templates/config_db.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-env
data:
  POSTGRES_DB: devops_lessons
  POSTGRES_USER: postgres
  PGDATA: /var/lib/postgresql/data/pgdata/data
---
# Source: App-HelmChart/templates/storageClass.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: my-dynamic-sc
provisioner: ebs.csi.aws.com
volumeBindingMode: Immediate
allowVolumeExpansion: true
parameters:
  type: gp3
  fsType: ext4
---
# Source: App-HelmChart/templates/db-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: my-dynamic-sc
---
# Source: App-HelmChart/templates/backend-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-back-svc
spec:
  selector:
    app: my-release-back
  ports:
    - port: 7000
      targetPort: 7000
---
# Source: App-HelmChart/templates/db-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432
---
# Source: App-HelmChart/templates/frontend-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-front-svc
spec:
  selector:
    app: my-release-front
  ports:
   - port: 3000
     targetPort: 80
---
# Source: App-HelmChart/templates/backend-deploy.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-release-back
  template:
    metadata:
      labels:
        app: my-release-back
    spec:
      initContainers:
        - name: wait-for-postgres
          image: busybox
          command: ['sh', '-c', 'until nc -z db 5432; do echo "Waiting for postgres..."; sleep 2; done']

      containers:
        - name: backend
          image: edo1997edo/my_back:v1
          ports:
            - containerPort: 7000
          resources:
             limits:
               cpu: 500m
               memory: 256Mi
             requests:
               cpu: 200m
               memory: 128Mi
          envFrom:
            - configMapRef:
                name: back-env
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRES_PASSWORD
---
# Source: App-HelmChart/templates/db-deploy.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: topology.kubernetes.io/zone
                operator: In
                values:
                - eu-central-1b
      containers:
        - name: postgres
          image: postgres:14
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: db-env
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data/pgdata
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: db-pvc
---
# Source: App-HelmChart/templates/frontend-deploy.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-front
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-release-front
  template:
    metadata:
      labels:
        app: my-release-front
    spec:
      containers:
        - name: my-release-front-container
          image: edo1997edo/api_front:v12
          ports:
            - containerPort: 80
          resources:
             limits:
               cpu: 250m
               memory: 128Mi
             requests:
               cpu: 250m
               memory: 64Mi
---
# Source: App-HelmChart/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  ingressClassName: nginx
  rules:
    - host: myapp.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: my-release-front-svc
                port:
                  number: 3000
          - path: /api(/|$)(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: my-release-back-svc
                port:
                  number: 7000
